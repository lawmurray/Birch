/**
 * Dirichlet-categorical distribution.
 */
final class DirichletCategoricalDistribution<Arg>(α:Arg) < Distribution<Integer> {
  /**
   * Concentrations.
   */
  α:Arg <- α;

  override function simulate() -> Integer! {
    return value(simulate_dirichlet_categorical(α));
  }

  override function simulateLazy() -> Integer! {
    return eval(simulate_dirichlet_categorical(α));
  }

  override function logpdf(x:Integer!) -> Real! {
    return value(logpdf_dirichlet_categorical(x, α));
  }

  override function logpdfLazy(x:Integer!) -> Real! {
    return eval(logpdf_dirichlet_categorical(x, α));
  }

  override function update(x:Integer!) -> Delay? {
    return update_dirichlet_categorical(x, α);
  }

  override function updateLazy(x:Random<Integer>) -> Delay? {
    return update_dirichlet_categorical(x, α);
  }

  override function hoist() -> Expression<Real> {
    return box(logpdf_dirichlet_categorical(random(), α));
  }

  override function lower() -> Integer!? {
    return 1;
  }

  override function upper() -> Integer!? {
    return length(value(α));
  }

  override function fix() {
    super.fix();
    constant(α);
  }
}

function DirichletCategorical<Arg>(α:Arg) -> Distribution<Integer> {
  return make_dirichlet_categorical(α);
}
function make_dirichlet_categorical<Arg>(α:Arg) -> {
  return peg_dirichlet_categorical(peg(α));
}
function peg_dirichlet_categorical<Arg>(α:Arg) -> {
  return DirichletCategoricalDistribution<Arg>(α);
}

/**
 * Create categorical distribution.
 */
function Categorical(ρ:Random<Real[_]>) -> Distribution<Integer> {
  if ρ.isDirichlet() {
    let p_ρ <- ρ.graft();
    let α <- p_ρ.getDirichlet()!;
    let p <- make_dirichlet_categorical(α);
    p_ρ.setMarginalized(p);
    return p;
  } else {
    return make_categorical(ρ);
  }
}

/*
 * Simulate a Dirichlet-categorical distribution.
 *
 * @param α Concentrations.
 */
function simulate_dirichlet_categorical<Arg1>(α:Arg1) -> {
  return simulate_categorical(simulate_dirichlet(α));
}

/*
 * Observe a Dirichlet-categorical variate.
 *
 * @param x The variate.
 * @param α Concentrations.
 *
 * @return the log probability mass.
 */
function logpdf_dirichlet_categorical<Arg1,Arg2>(x:Arg1, α:Arg2) -> {
  return lfact(element(α, x)) - lgamma(element(α, x)) + lgamma(sum(α)) -
      lfact(sum(α));
}

/*
 * Update the parameters of a Dirichlet distribution with a categorical
 * likelihood.
 *
 * @param x The variate.
 * @param α Prior concentrations.
 *
 * @return the posterior hyperparameters `α'`.
 */
function update_dirichlet_categorical<Arg1,Arg2>(x:Arg1, α:Arg2) -> {
  return make_dirichlet(α + single(1.0, x, length(α)));
}
