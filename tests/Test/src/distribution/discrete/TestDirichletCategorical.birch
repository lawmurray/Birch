class TestDirichletCategorical < TestModel {
  ρ:Random<Real[_]>;
  x:Random<Integer>;
  α:Random<Real[_]>;

  override function initialize() {
    α ~ MultivariateGaussian(vector(0.0, 5), diagonal(4.0, 5));
  }

  override function simulate() {
    ρ ~ Dirichlet(exp(α) + 1.0);
    x ~ Categorical(ρ);
  }

  override function forward() -> Real[_] {
    y:Real[6];
    y[1..5] <- eval(ρ);
    y[6] <- eval(x);
    return y;
  }

  override function backward() -> Real[_] {
    y:Real[6];
    assert !x.hasValue();
    y[6] <- eval(x);
    assert !ρ.hasValue();
    y[1..5] <- eval(ρ);
    return y;
  }

  function marginal() -> Distribution<Integer> {
    return x.getDistribution();
  }

  override function size() -> Integer {
    return 6;
  }
}

program test_conjugacy_dirichlet_categorical(N:Integer <- 10000,
    lazy:Boolean <- false) {
  m:TestDirichletCategorical;
  test_conjugacy(m, N, lazy);
}

program test_grad_dirichlet_categorical(N:Integer <- 1000,
    backward:Boolean <- false) {
  m:TestDirichletCategorical;
  test_grad(m, N, backward);
}

program test_pdf_dirichlet_categorical(N:Integer <- 10000, S:Integer <- 0,
    lazy:Boolean <- false) {
  m:TestDirichletCategorical;
  test_pdf(m, N, lazy);
}
